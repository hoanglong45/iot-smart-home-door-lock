{"version":3,"sources":["services/firebase.js","components/AccessLog.js","components/UserInfo.js","components/AddUser.js","components/EditableTable.js","components/Login/index.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","auth","AccessLog","state","users","ref","on","snapshot","userData","val","newArrUser","user","unshift","id","name","rfid","accessDate","access_by_date","accessTime","access_by_time","setState","this","dataSource","columns","title","dataIndex","rowKey","React","Component","UserInfo","props","editableCell","mergedColumns","handleCancel","components","body","cell","bordered","rowClassName","pagination","onChange","AddUser","useState","isModalVisible","setModalVisible","Form","useForm","form","arrUsers","visible","onCancel","footer","initialValues","remember","onFinish","values","itemsRef","pin","createdDate","Date","toLocaleDateString","createdTime","toLocaleTimeString","checkRFID","message","error","item","created_by_date","created_by_time","push","resetFields","Item","label","rules","required","pattern","Password","type","htmlType","onClick","EditableCell","editing","inputType","children","record","index","restProps","style","margin","EditableTable","data","setData","editingKey","setEditingKey","useEffect","isEditing","cancel","openNotification","notification","description","save","a","itemTarget","newData","validateFields","row","findIndex","splice","set","console","log","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","placeholder","value","e","target","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","render","text","editable","_","SaveOutlined","onConfirm","CloseOutlined","disabled","setFieldsValue","edit","EditOutlined","marginLeft","handleRemove","DeleteOutlined","userId","remove","map","col","onCell","component","Login","setError","history","useHistory","setIsLogin","className","email","password","signInWithEmailAndPassword","then","res","Object","entries","b","h","token","localStorage","setItem","catch","handleSignIn","onFinishFailed","errorInfo","Header","Layout","Content","Footer","Sider","App","collapsed","setCollapse","getItem","isLogin","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","DashboardOutlined","to","UserOutlined","LogoutOutlined","background","border","cursor","textAlign","signOut","removeItem","window","location","replace","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef88b571.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCfTKQ-5sDNvN3QfC6S4oqeKOnbEv7AxzE\",\r\n  authDomain: \"iot-smart-home-door-lock-7ccc9.firebaseapp.com\",\r\n  databaseURL: \"https://iot-smart-home-door-lock-7ccc9.firebaseio.com\",\r\n  projectId: \"iot-smart-home-door-lock-7ccc9\",\r\n  storageBucket: \"iot-smart-home-door-lock-7ccc9.appspot.com\",\r\n  messagingSenderId: \"513607106040\",\r\n  appId: \"1:513607106040:web:d627644390357454e76a0d\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.database();\r\nexport const auth = firebase.auth();","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nclass AccessLog extends React.Component {\r\n  state = {\r\n    users: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const itemsRef = db.ref(\"Access\");\r\n    itemsRef.on(\"value\", (snapshot) => {\r\n      let userData = snapshot.val();\r\n      let newArrUser = [];\r\n      for (let user in userData) {\r\n        newArrUser.unshift({\r\n          id: user,\r\n          name: userData[user].name,\r\n          rfid: userData[user].rfid,\r\n          accessDate: userData[user].access_by_date,\r\n          accessTime: userData[user].access_by_time,\r\n        });\r\n      }\r\n      this.setState({\r\n        users: newArrUser,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    const columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"RFID\",\r\n        dataIndex: \"rfid\",\r\n      },\r\n      {\r\n        title: \"Access by Date\",\r\n        dataIndex: \"accessDate\",\r\n      },\r\n      {\r\n        title: \"Access by Time\",\r\n        dataIndex: \"accessTime\",\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Table dataSource={users} columns={columns} rowKey=\"id\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccessLog;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nclass UserInfo extends React.Component {\r\n  render() {\r\n    const { users, editableCell, mergedColumns, handleCancel } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={{\r\n            body: {\r\n              cell: editableCell,\r\n            },\r\n          }}\r\n          bordered\r\n          dataSource={users}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: handleCancel,\r\n          }}\r\n          rowKey=\"id\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Modal, message } from \"antd\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nconst AddUser = (props) => {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const { arrUsers } = props;\r\n\r\n  const showModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const checkRFID = (rfid) => {\r\n    for (let user in arrUsers) {\r\n      if (rfid === arrUsers[user].rfid) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    const itemsRef = db.ref(\"Users\");\r\n    const { name, rfid, pin } = values;\r\n    const createdDate = new Date().toLocaleDateString();\r\n    const createdTime = new Date().toLocaleTimeString();\r\n    if (!checkRFID(rfid)) {\r\n      const item = {\r\n        name: name,\r\n        rfid: rfid,\r\n        pin: pin,\r\n        created_by_date: createdDate,\r\n        created_by_time: createdTime,\r\n      };\r\n      itemsRef.push(item);\r\n      setModalVisible(false);\r\n      onReset();\r\n    } else {\r\n      message.error(\"RFID existed !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Add new user\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        footer={false}\r\n      >\r\n        <Form\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your name\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"RFID\"\r\n            name=\"rfid\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your RFID\",\r\n                pattern: /^[0-9]+$/,\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password type=\"number\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Pin\"\r\n            name=\"pin\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your pin\",\r\n                pattern: /^[0-9]+$/,\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add User\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Popconfirm, Form, Space, Button, notification } from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  SearchOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { db } from \"../services/firebase\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport AddUser from \"./AddUser\";\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}! ${\r\n                inputType === \"number\" ? \"requirement number\" : \"\"\r\n              }`,\r\n              pattern: inputType === \"number\" && /^[0-9]+$/,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(\"\");\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const itemsRef = db.ref(\"Users\");\r\n    itemsRef.on(\"value\", (snapshot) => {\r\n      let userData = snapshot.val();\r\n      const newArrUser = [];\r\n      for (let user in userData) {\r\n        newArrUser.push({\r\n          id: user,\r\n          name: userData[user].name,\r\n          rfid: userData[user].rfid,\r\n          pin: userData[user].pin,\r\n          createdDate: userData[user].created_by_date,\r\n          createdTime: userData[user].created_by_time,\r\n        });\r\n      }\r\n      setData(newArrUser);\r\n    });\r\n  }, []);\r\n\r\n  const isEditing = (record) => record.id === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      rfid: \"\",\r\n      pin: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.id);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const openNotification = (type) => {\r\n    switch (type) {\r\n      case \"success\":\r\n        notification[type]({\r\n          message: \"Success\",\r\n          description: \"Updated successfully\",\r\n        });\r\n        break;\r\n      case \"error\":\r\n        notification[type]({\r\n          message: \"Error\",\r\n          description: \"RFID existed !\",\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const save = async (id) => {\r\n    // const dayUpdate = new Date().toLocaleDateString();\r\n    // const timeUpdate = new Date().toLocaleTimeString();\r\n\r\n    const itemTarget = db.ref(`Users/${id}`);\r\n\r\n    const newData = [...data];\r\n\r\n    const checkRFID = (rfid) => {\r\n      for (let user in newData) {\r\n        if (rfid === newData[user].rfid) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    try {\r\n      const row = await form.validateFields();\r\n      const index = newData.findIndex((item) => id === item.id);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        const { createdDate, createdTime } = item;\r\n\r\n        if (checkRFID(row.rfid)) {\r\n          openNotification(\"error\");\r\n        } else {\r\n          openNotification(\"success\");\r\n          newData.splice(index, 1, { ...item, ...row });\r\n          itemTarget.set({\r\n            ...row,\r\n            created_by_date: createdDate,\r\n            created_by_time: createdTime,\r\n          });\r\n          setData(newData);\r\n          setEditingKey(\"\");\r\n        }\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => node}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n\r\n    onFilterDropdownVisibleChange: (visible) => visible,\r\n\r\n    render: (text) => text,\r\n  });\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n  };\r\n\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"name\",\r\n      dataIndex: \"name\",\r\n      ...getColumnSearchProps(\"name\"),\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"rfid\",\r\n      dataIndex: \"rfid\",\r\n      ...getColumnSearchProps(\"rfid\"),\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"pin\",\r\n      dataIndex: \"pin\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Created by Date\",\r\n      dataIndex: \"createdDate\",\r\n    },\r\n    {\r\n      title: \"Created by Time\",\r\n      dataIndex: \"createdTime\",\r\n    },\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <Space size=\"middle\">\r\n            <Button onClick={() => save(record.id)}>\r\n              Save\r\n              <SaveOutlined />\r\n            </Button>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Button>\r\n                Cancel <CloseOutlined />\r\n              </Button>\r\n            </Popconfirm>\r\n          </Space>\r\n        ) : (\r\n          <Space size=\"middle\">\r\n            <Button disabled={editingKey !== \"\"} onClick={() => edit(record)}>\r\n              Edit\r\n              <EditOutlined style={{ marginLeft: \"5px\" }} />\r\n            </Button>\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => handleRemove(record.id)}\r\n            >\r\n              <Button disabled={editingKey !== \"\"}>\r\n                <span>Delete</span>\r\n                <DeleteOutlined />\r\n              </Button>\r\n            </Popconfirm>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleRemove = (userId) => {\r\n    const itemRef = db.ref(`Users/${userId}`);\r\n    itemRef.remove();\r\n  };\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType:\r\n          col.dataIndex === \"rfid\" || col.dataIndex === \"pin\"\r\n            ? \"number\"\r\n            : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      <AddUser arrUsers={data} />\r\n      <Form form={form} component={false}>\r\n        <UserInfo\r\n          users={data}\r\n          editableCell={EditableCell}\r\n          mergedColumns={mergedColumns}\r\n          handleCancel={cancel}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditableTable;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { auth } from \"../../services/firebase\";\r\nimport \"./style.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const { setIsLogin } = props;\r\n  const handleSignIn = (email, password) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async (res) => {\r\n        const token = await Object.entries(res.user)[5][1].b.h;\r\n        if (token) {\r\n          setIsLogin(true);\r\n          localStorage.setItem(\"token\", token);\r\n          return history.push(\"/access-log\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setError(\"Email or password incorrect !\");\r\n      });\r\n  };\r\n  const onFinish = (values) => {\r\n    const { email, password } = values;\r\n    handleSignIn(email, password);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-form\">\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        className=\"form\"\r\n      >\r\n        <h1>login</h1>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please input your email!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form.Item>\r\n\r\n        {error && <Form.Item className=\"error\">{error}</Form.Item>}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport { Layout, Menu } from \"antd\";\nimport \"./App.css\";\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport AccessLog from \"./components/AccessLog\";\nimport EditableTable from \"./components/EditableTable\";\nimport Login from \"./components/Login\";\nimport { auth } from \"./services/firebase\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App = () => {\n  const [collapsed, setCollapse] = useState(false);\n  const [isLogin, setIsLogin] = useState(() => {\n    const isHaveToken = localStorage.getItem(\"token\");\n    if (isHaveToken) {\n      // window.location.replace(\"/iot-smart-home-door-lock-client/access-log\");\n      return true;\n    }\n    return false;\n  });\n  function toggle() {\n    setCollapse(!collapsed);\n  }\n\n  function logout() {\n    auth.signOut().then(() => {\n      localStorage.removeItem(\"token\");\n      setIsLogin(false);\n    });\n    window.location.replace(\"/\");\n  }\n\n  return (\n    <Router>\n      {isLogin ? (\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={toggle}>\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              defaultSelectedKeys={[\"/access-log\"]}\n              mode=\"inline\"\n            >\n              <Menu.Item key=\"/access-log\" icon={<DashboardOutlined />}>\n                Access Log\n                <Link to=\"/access-log\" />\n              </Menu.Item>\n              <Menu.Item key=\"/user-info\" icon={<UserOutlined />}>\n                User Information\n                <Link to=\"/user-info\" />\n              </Menu.Item>\n              <div className=\"button-logout\"></div>\n              <Menu.Item icon={<LogoutOutlined />}>\n                <button\n                  style={{\n                    background: \"none\",\n                    border: \"none\",\n                    cursor: \"pointer\",\n                    width: \"calc(100% - 32px)\",\n                    padding: \"0\",\n                    textAlign: \"left\",\n                  }}\n                  onClick={logout}\n                >\n                  Logout\n                </button>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <Content style={{ margin: \"0 16px\" }}>\n              <Switch>\n                <Route exact path=\"/user-info\" component={EditableTable} />\n                <Route exact path=\"/access-log\" component={AccessLog} />\n              </Switch>\n            </Content>\n            <Footer style={{ textAlign: \"center\" }}>\n              Dashboard ©2020 Created by Long Le Hoang\n            </Footer>\n          </Layout>\n        </Layout>\n      ) : (\n        <Login setIsLogin={setIsLogin} />\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  // <React.StrictMode>\n\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}